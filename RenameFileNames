import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.HashMap;
import java.util.Map;

public class RenameFileNames {

	static Map<String, String> guidNamesMap = new HashMap<String, String>();

	public static void main(String[] args) {

		// Data.txt

		//FileRenamingTask\\Files"

		new RenameFileNames().readFromFile(args[0]);
		guidNamesMap.entrySet().forEach(
				entry -> System.out.println("Data Read from input file " + entry.getKey() + " " + entry.getValue()));
		RenameFiles(args[1]);

	}

	private static void RenameFiles(String folder) {
		String fileName;
		for (File file : new File(folder).listFiles()) {
			System.out.println(file.getName());
			fileName = file.getName();
			if (guidNamesMap.containsKey(fileName)) {
				System.out.println(folder + File.separatorChar + fileName);
				Path source = Paths.get(folder + File.separatorChar + fileName);
				try {
					// rename a file in the same directory
					Files.move(source, source.resolveSibling(folder + File.separatorChar + guidNamesMap.get(fileName)));
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
	}

	private void readFromFile(String fileName) {

		try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
			String line;
			while ((line = br.readLine()) != null) {
				guidNamesMap.put(line.split(",")[0], line.split(",")[1]);
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

}
